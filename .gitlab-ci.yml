stages:
  - docker-get-version
  - docker-build
  - docker-push

include:
  - project: applications/tooling
    ref: main
    file: 'gitlab-ci-includes/build-oci-image.yml'

docker-image-get-version:
  stage: docker-get-version
  extends: .docker:get-version
  variables:
    DOCKERFILE_NAME: Dockerfile
  script:
    echo "VERSION_TAGS[latest]=latest" | tee -a VERSION_TAGS
  rules:
    - when: always

docker-image-build:
  stage: docker-build
  extends: .docker:build-image-from-dockerfile
  variables:
    IMAGE_NAME: plasma
    DOCKERFILE_NAME: Dockerfile
    #BUILD_ARGS: "--build-arg GIT_TOKEN=${GIT_TOKEN} --build-arg GIT_LOGIN_USER=${GIT_LOGIN_USER} --build-arg PROJECT_NAME=${PROJECT_NAME} --build-arg PROJECT_ID=${PROJECT_ID} --build-arg CODENAME=${CODENAME} --build-arg CI_API_V4_URL=${CI_API_V4_URL} --build-arg CI_SERVER_HOST=${CI_SERVER_HOST}"
  rules:
    - !reference [docker-image-get-version, rules]

docker-image-push:
  stage: docker-push
  extends: .docker:push-image-to-registry
  variables:
    IMAGE_NAME: plasma
    DOCKERFILE_NAME: Dockerfile
    #BUILD_ARGS: "--build-arg GIT_TOKEN=${GIT_TOKEN} --build-arg GIT_LOGIN_USER=${GIT_LOGIN_USER} --build-arg PROJECT_NAME=${PROJECT_NAME} --build-arg PROJECT_ID=${PROJECT_ID} --build-arg CODENAME=${CODENAME} --build-arg CI_API_V4_URL=${CI_API_V4_URL} --build-arg CI_SERVER_HOST=${CI_SERVER_HOST}"
  rules:
    - !reference [docker-image-get-version, rules]